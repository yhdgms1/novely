import { createI18N, self } from '@novely/i18n'

const { t, extend } = createI18N(
  {
    ru: {
      '–ª–µ—Ç': {
        zero: '–ª–µ—Ç',
        one: '–≥–æ–¥',
        few: '–≥–æ–¥–∞',
        many: '–ª–µ—Ç'
      }
    },
  },
  {
    ru: {
      '–ü—Ä–∏–≤–µ—Ç! –¢—ã <em>–Ω–æ–≤–µ–Ω—å–∫–∏–π</em>, –Ω–µ —Ç–∞–∫ –ª–∏?': self,
      '–ü—Ä–∏–≤–µ—Ç, {{name}}! –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç? üòô': self,
      '–ü—Ä–∞–≤–¥–∞ {{age}} –ª–µ—Ç? –ó–∞–≥–ª—è–Ω–∏ –∫–æ –º–Ω–µ –∫–∞–∫-–Ω–∏–±—É–¥—å üòâ': ({ age, pluralize }) => {
        return `–ü—Ä–∞–≤–¥–∞ ${age} ${pluralize('–ª–µ—Ç', age)}? –ó–∞–≥–ª—è–Ω–∏ –∫–æ –º–Ω–µ –∫–∞–∫-–Ω–∏–±—É–¥—å üòâ`;
      },
      '–¢–µ–±–µ {{age}} –ª–µ—Ç?? –ù–µ —É–º–µ—é —è –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –≤–æ–∑—Ä–∞—Å—Ç... üòÖ': ({ age, pluralize }) => {
        return `–¢–µ–±–µ ${age} ${pluralize('–ª–µ—Ç', age)}?? –ù–µ —É–º–µ—é —è –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –≤–æ–∑—Ä–∞—Å—Ç... üòÖ`;
      },
    }
  }
);

const { t: tt } = extend(
  {
    ru: {
      '–∫—É—Å—å': {
        zero: '–∫—É—Å–µ–π',
        one: '–∫—É—Å—å',
        few: '–∫—É—Å—è',
        many: '–∫—É—Å–µ–π'
      },
    },
    en: {
      '–∫—É—Å—å': {
        zero: '–∫—É—Å–µ–π',
        one: '–∫—É—Å—å',
        few: '–∫—É—Å—è',
        many: '–∫—É—Å–µ–π'
      },
      '–ª–µ—Ç': {
        zero: 'years',
        one: 'year',
        many: 'years'
      }
    }
  },
  {
    ru: {
      '–ö–æ—Ç –¥–∞—ë—Ç {{x}} –∫—É—Å–µ–π': ({ x, pluralize }) => {
        return `–ö–æ—Ç –¥–∞—ë—Ç ${x} ${pluralize('–∫—É—Å—å', x)}`;
      },
    },
    en: {
      '–ö–æ—Ç –¥–∞—ë—Ç {{x}} –∫—É—Å–µ–π': ({ x, pluralize }) => {
        return `Can bites with ${x} ${pluralize('–∫—É—Å—å', x)}`;
      },
      '–ü—Ä–∏–≤–µ—Ç! –¢—ã <em>–Ω–æ–≤–µ–Ω—å–∫–∏–π</em>, –Ω–µ —Ç–∞–∫ –ª–∏?': 'Hi! You are a <em>newbie<em>, is not it?',
    }
  }
);

tt('–ö–æ—Ç –¥–∞—ë—Ç {{x}} –∫—É—Å–µ–π')

export { t }